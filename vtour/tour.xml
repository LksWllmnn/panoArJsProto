<krpano version="1.20.9" title="Virtual Tour">

	<include url="skin/vtourskin.xml" />

    <include url="data/projecttexts.xml" />

	<!-- customize skin settings: maps, gyro, webvr, thumbnails, tooltips, layout, design, ... -->
	<skin_settings maps="false"
	               maps_type="google"
	               maps_bing_api_key=""
	               maps_google_api_key=""
	               maps_zoombuttons="false"
	               maps_loadonfirstuse="true"
	               gyro="true"
	               gyro_keeplookingdirection="false"
	               webvr="true"
	               webvr_keeplookingdirection="true"
	               webvr_prev_next_hotspots="true"
	               autotour="false"
	               littleplanetintro="false"
	               followmousecontrol="false"
	               title="true"
	               thumbs="true"
	               thumbs_width="120" thumbs_height="80" thumbs_padding="10" thumbs_crop="0|40|240|160"
	               thumbs_opened="false"
	               thumbs_text="false"
	               thumbs_dragging="true"
	               thumbs_onhoverscrolling="false"
	               thumbs_scrollbuttons="false"
	               thumbs_scrollindicator="false"
	               thumbs_loop="false"
	               tooltips_buttons="false"
	               tooltips_thumbs="false"
	               tooltips_hotspots="false"
	               tooltips_mapspots="false"
	               deeplinking="false"
	               loadscene_flags="MERGE"
	               loadscene_blend="OPENBLEND(0.5, 0.0, 0.75, 0.05, linear)"
	               loadscene_blend_prev="SLIDEBLEND(0.5, 180, 0.75, linear)"
	               loadscene_blend_next="SLIDEBLEND(0.5,   0, 0.75, linear)"
	               loadingtext=""
	               layout_width="100%"
	               layout_maxwidth="814"
	               controlbar_width="-24"
	               controlbar_height="40"
	               controlbar_offset="20"
	               controlbar_offset_closed="-40"
	               controlbar_overlap.no-fractionalscaling="10"
	               controlbar_overlap.fractionalscaling="0"
	               design_skin_images="vtourskin.png"
	               design_bgcolor="0x2D3E50"
	               design_bgalpha="0.8"
	               design_bgborder="0"
	               design_bgroundedge="1"
	               design_bgshadow="0 4 10 0x000000 0.3"
	               design_thumbborder_bgborder="3 0xFFFFFF 1.0"
	               design_thumbborder_padding="2"
	               design_thumbborder_bgroundedge="0"
	               design_text_css="color:#FFFFFF; font-family:Arial;"
	               design_text_shadow="1"
	               />

	<!--
	    For an alternative skin design either change the <skin_settings> values 
	    from above or optionally include one of the predefined designs from below.
	-->
	<!-- <include url="skin/vtourskin_design_flat_light.xml"  /> -->
	<!-- <include url="skin/vtourskin_design_glass.xml"       /> -->
	<!-- <include url="skin/vtourskin_design_ultra_light.xml" /> -->
	<!-- <include url="skin/vtourskin_design_117.xml"         /> -->
	<!-- <include url="skin/vtourskin_design_117round.xml"    /> -->
	<!-- <include url="skin/vtourskin_design_black.xml"       /> -->


	<!-- startup action - load the first scene -->
	<action name="startup" autorun="onstart">
		if(startscene === null OR !scene[get(startscene)], copy(startscene,scene[0].name); );
		loadscene(get(startscene), null, MERGE);
		if(startactions !== null, startactions() );
	</action>


	
	<scene name="scene_Bola" title="Bola" onstart="" thumburl="panos/Bola.tiles/thumb.jpg" lat="" lng="" heading="">
		
		<control bouncinglimits="calc:image.cube ? true : false" />

		<view hlookat="0.0" vlookat="0.0" fovtype="MFOV" fov="120" maxpixelzoom="2.0" fovmin="70" fovmax="140" limitview="auto" />

		<preview url="panos/Bola.tiles/preview.jpg" />

		<image>
			<cube url="panos/Bola.tiles/%s/l%l/%v/l%l_%s_%v_%h.jpg" multires="512,1024,2048,3840" />
		</image>

        <hotspot name="imsimity"
				type="text"
                html="Click Me!"
				scale="1"
				zoom="true"
				ath="0" atv="0"
				onclick="looktohotspot(get(name),130);popup('html', get(data[TestText].content), 600, 300, true);"
			/>

	</scene>

    <!--Actions-->
            <action name="popup" scope="private:POPUP" args="type, content, width, height, scrollbars">
				<![CDATA[
					if(popup, break(); );
					
					addlayer('popup_bg', popup_bg);
					set(popup_bg,
						type=container,
						align=lefttop, width=100%, height=100%,
						zorder=99,
						handcursor=false,
						bgcapture=true,
						capture=false,
						//bgcolor=0x123456, onloaded='tween(bgalpha,0.3,1.0);',	// optional: colorize the background
						ondown='popup_close()'
					);
						
					
					addlayer('popup', popup);
					set(popup,
						type=container,
						parent='popup_bg',
						width=calc(min(width,global.stagewidth*0.9)),
						height=calc(min(height,global.stageheight*0.8)),
						align=center,
						//bgborder='1 0x555555 1',
						bgcolor=0x555555,
						bgalpha=0.7,
						//bgshadow='0 10 20 0x000000 0.5',
						bgcapture=true,
						maskchildren=false,
						capture=true,
						handcursor=false,
						alpha=0
					);
					
					/*
					// optional: add a close button
					addlayer('popup_close_x', closex);
					set(closex,
						url='%CURRENTXML%/closex.png',
						parent='popup',
						align=righttop,
						edge=center,
						scale=0.5,
						zorder=99,
						alpha=0.25,
						onover='tween(alpha,1)',
						onout='tween(alpha,0.25)',
						ondown='tween(alpha,1)',
						onup='tween(alpha,0.25)',
						onclick='popup_close()'
					);
					*/

					if(type == 'html',
						copy(popup.datacontent, content);
						calc(popup.onloaded, 'add_html_code(get(datacontent),'+scrollbars+');');

					,type == 'iframe',
						calc(popup.datacontent, '<iframe style="position:absolute;width:100%;height:100%;top:0px;left:0px;" src="'+content+'" frameborder="0" allowfullscreen></iframe>');
						calc(popup.onloaded, 'add_html_code(get(datacontent),'+scrollbars+');');

					,type == 'image',
						set(popup,
							bgcolor=0xFFFFFF,
							bgalpha=1,
						);
						addlayer("popup_image", img);
						set(img,
							url=get(content),
							align=center,
							width=-20, height=-20,
							parent=get(popup.name),
							onloaded='popup_imageloaded()'
						);
					);

					tween(global.plugin[pp_blur].range, 40.0);
					delayedcall(0.2, tween(global.layer[popup].alpha, 1.0); );

					set(global.events[popup].onclick, popup_close() );
					set(global.events[popup].onremovepano, popup_close() );
				]]>
			</action>
            
            <!--<action name="WelcomeAutoText" autorun="onstart">
		        popup('html', get(data[Willkommentext].content), 600, 500, true);
	        </action>-->

			<action name="popup_close">
				set(global.plugin[popup_bg].enabled, false);
				set(global.events[popup].name, null);
				tween(global.plugin[pp_blur].range, 0.0);
				tween(global.layer[popup_bg].bgalpha, 0.0, 0.25);
				tween(global.layer[popup].alpha, 0.0, 0.25, default,
				removelayer('popup_bg', true);
				scope(private:POPUP, delete(popup); );
				);
			</action>


			<action name="popup_imageloaded" scope="private:POPUP">
				calc(imgw, caller.imagewidth + 20);
				calc(imgh, caller.imageheight + 20);
				calc(maxw, global.stagewidth*0.9);
				calc(maxh, global.stageheight*0.8);
				if(imgw GT maxw,
				calc(imgh, round(imgh * maxw / imgw));
				copy(imgw, maxw);
				);
				if(imgh GT maxh,
				calc(imgw, round(imgw * maxh / imgh));
				copy(imgh, maxh);
				);

				set(global.layer[get(caller.parent)], width=get(imgw), height=get(imgh) );
			</action>

			<action name="add_html_code" type="Javascript">
				<![CDATA[
					var div = document.createElement("div");

					// basic styles to fit into the layer size and allow scrolling:
					div.style.width = "100%";
					div.style.height = "100%";
					div.style.boxSizing = "border-box";
					div.style.overflow = args[2] == "true" ? "auto" : "hidden";
					
				

					// allow text selection (optional):
					div.style.webkitUserSelect =
					div.style.MozUserSelect =
					div.style.msUserSelect =
					div.style.userSelect = "text";

					function stopPropagation(e){ e.stopPropagation(); }
					function preventDefault(e){ e.preventDefault(); }

					// enable browsed-based mouse-wheel and touch-scrolling support:
					div.addEventListener("wheel", stopPropagation, true);
					div.addEventListener("mousewheel", stopPropagation, true);
					div.addEventListener("DOMMouseScroll", stopPropagation, true);
					div.addEventListener("touchstart", function(event){ if(krpano.device.ios && window.innerHeight == krpano.display.htmltarget.offsetHeight){ /* avoid the iOS 'overscrolling' for fullpage viewers */ var bs = document.body.parentNode.style; bs.position="fixed"; bs.top=0; bs.left=0; bs.right=0; bs.bottom=0; } krpano.control.preventTouchEvents = false; event.stopPropagation(); }, true);
					div.addEventListener("touchend", function(event){ krpano.control.preventTouchEvents = true; event.stopPropagation(); }, true);
					div.addEventListener("gesturestart", preventDefault, true);

					// add the html code:
					div.innerHTML = args[1];

					// add the div to the layer element:
					caller.sprite.appendChild(div);
				]]>
			</action>

    <!--Action End-->

</krpano>
